[project]
name = "reformatters"
version = "0.1.0"
description = "Reformat weather datasets into zarr"
readme = "README.md"
requires-python = ">=3.12"


dependencies = [
    "dask>=2024.9.0",
    "numba>=0.61.0",
    "numcodecs>=0.13.1",
    "numpy>=2.1.1",
    "obstore>=0.4.0",
    "pydantic>=2.10.2",
    "rasterio>=1.4.2",
    "requests>=2.32.3",
    "rioxarray>=0.18.2",
    "s3fs>=2024.9.0",
    "sentry-sdk>=2.20.0",
    "typer>=0.12.5",
    "xarray>=2025.1.2",
    "zarr>=3.0.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project.scripts]
main = "reformatters.__main__:app"

[tool.uv]
dev-dependencies = [
    "matplotlib>=3.9.2",
    "mypy>=1.11.2",
    "pandas-stubs>=2.2.2.240909",
    "pre-commit>=3.8.0",
    "pyqt6>=6.7.1",
    "pytest>=8.3.4",
    "ruff==0.9.6",
    "types-requests>=2.32.0.20240914",
]

[tool.ruff.lint]
select = [
    "UP",    # pyupgrade
    "I",     # isort
    "F",     # pyflakes
    "N",     # pep8-naming
    "W",     # pycodestyle warning
    "E",     # pycodestyle error
    "ASYNC", # async
    "S",     # security
    "B",     # bugs
    "C4",    # comprehensions
    "T10",   # debugger
]
ignore = [
    "S101",  # disallow asserts
    "E501",  # line too long
    "W293",  # black line contains whitespace
]


[tool.mypy]
files = "."
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]
strict = true
enable_incomplete_feature = "NewGenericSyntax"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[project.package-data]
reformatters = ["py.typed"]
