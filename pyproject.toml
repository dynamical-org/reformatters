[project]
name = "reformatters"
version = "0.1.0"
description = "Reformat weather datasets into zarr"
readme = "README.md"
requires-python = ">=3.12"


dependencies = [
    "dask~=2025.0",
    "numba~=0.62",
    "numcodecs~=0.16",
    "numpy~=2.3",
    "obstore~=0.8",
    "pandas~=2.3",
    "pydantic~=2.10",
    "rasterio~=1.4",
    "requests~=2.32",
    "rioxarray~=0.19",
    "s3fs~=2025.0",
    "sentry-sdk~=2.20",
    "typer~=0.12",
    "xarray~=2025.9",
    "zarr~=3.1",
    "kubernetes~=33.1",
    "icechunk~=1.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project.scripts]
main = "reformatters.__main__:app"

[dependency-groups]
dev = [
    "matplotlib~=3.9",
    "mypy~=1.18",
    "pandas-stubs~=2.2",
    "pre-commit==4.3.0",
    "pyqt6>=6.7.1",
    "pytest~=8.4",
    "pytest-sugar~=1.0",
    "pytest-xdist~=3.8",
    # NOTE: keep this in sync with .pre-commit-config.yaml
    "ruff==0.13.1",
    "types-requests~=2.32",
]

[tool.ruff.lint]
select = [
    "UP",    # pyupgrade
    "I",     # isort
    "F",     # pyflakes
    "N",     # pep8-naming
    "W",     # pycodestyle warning
    "E",     # pycodestyle error
    "ASYNC", # async
    "S",     # security
    "B",     # bugs
    "A",     # shadowing builtins
    "C4",    # comprehensions
    "T10",   # debugger
    "T20",   # print
    "RUF",   # ruff
    "FURB",  # refurb
    "INP",   # missing __init__.py
    "PIE",   # misc flake8
    "PL",    # pylint
    "PGH",   # pygrep-hooks
    "PTH",   # use pathlib
    "LOG",   # logging
    "G",     # logging format
    "TD",    # todos
]
ignore = [
    "S101",    # disallow asserts
    "E501",    # line too long
    "W293",    # black line contains whitespace
    "UP046",   # non-pep695-generic-class - mypy doesn't support this yet
    "UP047",   # non-pep695-generic-function - mypy doesn't support this yet
    "PLC0414", # import aliases to same name - we use to specifically re-export
    "PLR0913", # too many arguments
    "TD003",   # don't require issue link
    "PTH123",  # allow `open`
    "G004",    # allow f-string in logging
]

[tool.ruff.lint.per-file-ignores]
    "tests/*" = [
        "PLR2004", # magic value used in comparison - useful in tests
    ]


[tool.mypy]
files = "."
strict = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[project.package-data]
reformatters = ["py.typed"]

[tool.pytest.ini_options]
pythonpath = "src/reformatters"
testpaths = ["tests/"]
addopts = "-n auto --dist loadfile"
markers = [
    "slow: slow running tests.",
    "skip_set_local_zarr_store_base_path: opt out of automatically writing zarrs to a tmp directory during tests",
]